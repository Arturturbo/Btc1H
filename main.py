import os
import time
import requests
from datetime import datetime
from telegram import Bot, InlineKeyboardMarkup, InlineKeyboardButton, Update
from telegram.ext import Updater, CallbackQueryHandler, CommandHandler, CallbackContext

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥—ã
TOKEN = os.getenv("TOKEN")
CHAT_ID = os.getenv("CHAT_ID")
bot = Bot(token=TOKEN)

last_sent_time = None

def analyze_market():
    now = datetime.utcnow().strftime("%Y-%m-%d %H:%M:%S")
    signal = {
        "time": now,
        "type": "Bullish engulfing",
        "rsi": 36.7,
        "macd": "üîº –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ –≤–≤–µ—Ä—Ö",
        "volume": "–≤—ã—Å–æ–∫–∏–π",
        "oi_delta": "+5.2%",
        "recommendation": "‚úÖ –í–æ–∑–º–æ–∂–µ–Ω –≤—Ö–æ–¥ (–ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏)",
        "probability": "78%"
    }
    return signal

def send_to_telegram(signal):
    global last_sent_time
    if signal["time"] == last_sent_time:
        print("[INFO] –°–∏–≥–Ω–∞–ª —É–∂–µ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ä–∞–Ω–µ–µ.")
        return

    message = f"""üìä BTC 1H –ê–Ω–∞–ª–∏–∑
üïí –í—Ä–µ–º—è: {signal['time']}
üìà –¢–∏–ø —Å–∏–≥–Ω–∞–ª–∞: {signal['type']}
üìâ RSI: {signal['rsi']}
üìä MACD: {signal['macd']}
üì¶ –û–±—ä—ë–º: {signal['volume']}
üí• OI Œî: {signal['oi_delta']}
üß† –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {signal['recommendation']}
üéØ –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å: {signal['probability']}"""

    keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton("‚úÖ –í–æ—à—ë–ª", callback_data="entered"),
         InlineKeyboardButton("üö´ –ü—Ä–æ–ø—É—Å—Ç–∏–ª", callback_data="skipped")]
    ])

    url = f"https://api.telegram.org/bot{TOKEN}/sendMessage"
    data = {
        "chat_id": CHAT_ID,
        "text": message,
        "parse_mode": "HTML",
        "reply_markup": keyboard.to_json()
    }

    try:
        response = requests.post(url, data=data)
        if response.status_code == 200:
            print("[OK] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
            last_sent_time = signal["time"]
        else:
            print(f"[ERROR] –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞ Telegram: {response.status_code}, —Ç–µ–∫—Å—Ç: {response.text}")
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

def handle_response(update: Update, context: CallbackContext):
    response = update.callback_query.data
    user = update.effective_user.first_name
    update.callback_query.answer()
    update.callback_query.edit_message_reply_markup(reply_markup=None)
    update.callback_query.message.reply_text(
        f"{user} –Ω–∞–∂–∞–ª: {'‚úÖ –í–æ—à—ë–ª' if response == 'entered' else 'üö´ –ü—Ä–æ–ø—É—Å—Ç–∏–ª'}"
    )

if __name__ == "__main__":
    from telegram.ext import Updater
    updater = Updater(token=TOKEN, use_context=True)
    dp = updater.dispatcher
    dp.add_handler(CallbackQueryHandler(handle_response))
    updater.start_polling()

    while True:
        signal = analyze_market()
        send_to_telegram(signal)
        time.sleep(3600)
